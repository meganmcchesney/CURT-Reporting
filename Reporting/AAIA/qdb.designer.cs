#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reporting.AAIA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qdb")]
	public partial class qdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQualifier(Qualifier instance);
    partial void UpdateQualifier(Qualifier instance);
    partial void DeleteQualifier(Qualifier instance);
    partial void InsertQualifierType(QualifierType instance);
    partial void UpdateQualifierType(QualifierType instance);
    partial void DeleteQualifierType(QualifierType instance);
    #endregion
		
		public qdbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["qdbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Qualifier> Qualifiers
		{
			get
			{
				return this.GetTable<Qualifier>();
			}
		}
		
		public System.Data.Linq.Table<QualifierType> QualifierTypes
		{
			get
			{
				return this.GetTable<QualifierType>();
			}
		}
		
		public System.Data.Linq.Table<QDBVersion> QDBVersions
		{
			get
			{
				return this.GetTable<QDBVersion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Qualifier")]
	public partial class Qualifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualifierId;
		
		private string _QualifierText;
		
		private string _ExampleText;
		
		private System.Nullable<int> _QualifierTypeId;
		
		private System.Nullable<int> _NewQualifierId;
		
		private System.DateTime _WhenModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualifierIdChanging(int value);
    partial void OnQualifierIdChanged();
    partial void OnQualifierTextChanging(string value);
    partial void OnQualifierTextChanged();
    partial void OnExampleTextChanging(string value);
    partial void OnExampleTextChanged();
    partial void OnQualifierTypeIdChanging(System.Nullable<int> value);
    partial void OnQualifierTypeIdChanged();
    partial void OnNewQualifierIdChanging(System.Nullable<int> value);
    partial void OnNewQualifierIdChanged();
    partial void OnWhenModifiedChanging(System.DateTime value);
    partial void OnWhenModifiedChanged();
    #endregion
		
		public Qualifier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifierId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QualifierId
		{
			get
			{
				return this._QualifierId;
			}
			set
			{
				if ((this._QualifierId != value))
				{
					this.OnQualifierIdChanging(value);
					this.SendPropertyChanging();
					this._QualifierId = value;
					this.SendPropertyChanged("QualifierId");
					this.OnQualifierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifierText", DbType="VarChar(500)")]
		public string QualifierText
		{
			get
			{
				return this._QualifierText;
			}
			set
			{
				if ((this._QualifierText != value))
				{
					this.OnQualifierTextChanging(value);
					this.SendPropertyChanging();
					this._QualifierText = value;
					this.SendPropertyChanged("QualifierText");
					this.OnQualifierTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExampleText", DbType="VarChar(500)")]
		public string ExampleText
		{
			get
			{
				return this._ExampleText;
			}
			set
			{
				if ((this._ExampleText != value))
				{
					this.OnExampleTextChanging(value);
					this.SendPropertyChanging();
					this._ExampleText = value;
					this.SendPropertyChanged("ExampleText");
					this.OnExampleTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifierTypeId", DbType="Int")]
		public System.Nullable<int> QualifierTypeId
		{
			get
			{
				return this._QualifierTypeId;
			}
			set
			{
				if ((this._QualifierTypeId != value))
				{
					this.OnQualifierTypeIdChanging(value);
					this.SendPropertyChanging();
					this._QualifierTypeId = value;
					this.SendPropertyChanged("QualifierTypeId");
					this.OnQualifierTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewQualifierId", DbType="Int")]
		public System.Nullable<int> NewQualifierId
		{
			get
			{
				return this._NewQualifierId;
			}
			set
			{
				if ((this._NewQualifierId != value))
				{
					this.OnNewQualifierIdChanging(value);
					this.SendPropertyChanging();
					this._NewQualifierId = value;
					this.SendPropertyChanged("NewQualifierId");
					this.OnNewQualifierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhenModified", DbType="SmallDateTime NOT NULL")]
		public System.DateTime WhenModified
		{
			get
			{
				return this._WhenModified;
			}
			set
			{
				if ((this._WhenModified != value))
				{
					this.OnWhenModifiedChanging(value);
					this.SendPropertyChanging();
					this._WhenModified = value;
					this.SendPropertyChanged("WhenModified");
					this.OnWhenModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualifierType")]
	public partial class QualifierType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QualifierTypeId;
		
		private string _QualifierType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualifierTypeIdChanging(int value);
    partial void OnQualifierTypeIdChanged();
    partial void OnQualifierType1Changing(string value);
    partial void OnQualifierType1Changed();
    #endregion
		
		public QualifierType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifierTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QualifierTypeId
		{
			get
			{
				return this._QualifierTypeId;
			}
			set
			{
				if ((this._QualifierTypeId != value))
				{
					this.OnQualifierTypeIdChanging(value);
					this.SendPropertyChanging();
					this._QualifierTypeId = value;
					this.SendPropertyChanged("QualifierTypeId");
					this.OnQualifierTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="QualifierType", Storage="_QualifierType1", DbType="VarChar(50)")]
		public string QualifierType1
		{
			get
			{
				return this._QualifierType1;
			}
			set
			{
				if ((this._QualifierType1 != value))
				{
					this.OnQualifierType1Changing(value);
					this.SendPropertyChanging();
					this._QualifierType1 = value;
					this.SendPropertyChanged("QualifierType1");
					this.OnQualifierType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Version")]
	public partial class QDBVersion
	{
		
		private System.DateTime _VersionDate;
		
		public QDBVersion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime VersionDate
		{
			get
			{
				return this._VersionDate;
			}
			set
			{
				if ((this._VersionDate != value))
				{
					this._VersionDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
